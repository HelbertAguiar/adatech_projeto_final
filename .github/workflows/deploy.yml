name: Deploy no Azure

on:
  push:
    branches:
      - main

env:
  REGISTRY_NAME: projetoacr123.azurecr.io
  API_IMAGE_NAME: api
  WEB_IMAGE_NAME: web
  RESOURCE_GROUP: projeto-final-rg
  API_APP_NAME: projeto-api
  WEB_APP_NAME: projeto-web

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Login no Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login no ACR
        run: |
          echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login $REGISTRY_NAME \
            -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin

      - name: Gerar TAG única baseada no SHA
        id: tagger
        run: echo "sha_tag=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      # API
      - name: Build e Push da API
        run: |
          docker build --no-cache -t $REGISTRY_NAME/$API_IMAGE_NAME:${{ steps.tagger.outputs.sha_tag }} -f Dockerfile.api .
          docker push $REGISTRY_NAME/$API_IMAGE_NAME:${{ steps.tagger.outputs.sha_tag }}
          az containerapp update \
            --name $API_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --image $REGISTRY_NAME/$API_IMAGE_NAME:${{ steps.tagger.outputs.sha_tag }}

      # Web
      - name: Build e Push do Frontend Angular
        run: |
          docker build --no-cache -t $REGISTRY_NAME/$WEB_IMAGE_NAME:${{ steps.tagger.outputs.sha_tag }} -f Dockerfile.web .
          docker push $REGISTRY_NAME/$WEB_IMAGE_NAME:${{ steps.tagger.outputs.sha_tag }}
          az containerapp update \
            --name $WEB_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --image $REGISTRY_NAME/$WEB_IMAGE_NAME:${{ steps.tagger.outputs.sha_tag }}
